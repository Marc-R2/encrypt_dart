# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Auth GitHub
        run: git config --global url."https://${{ secrets.MANU_GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: "2.19.0-146.2.beta"

      - name: Install dependencies
        run: dart pub get

      - name: TestGen
        run: dart pub run test_builder

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: dart analyze

      # Get a list of all test files
      - name: Get test files
        run: tests=$(find test -name "*_test.dart")
        shell: bash
        id: test_files

        # Create a step for each test file
      - name: Run tests
        run: dart pub run test ${{ steps.test_files.outputs.tests }}
        shell: bash
        # loop: ${{ steps.test_files.outputs.tests.split() }}

      - name: Coverage information
        run: |
          dart pub global activate coverage
          dart pub global run coverage:test_with_coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
